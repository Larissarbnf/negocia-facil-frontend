/* RulesList.module.css - Design Moderno e Responsivo */
.container {
  min-height: 100vh;
  font-family: 'Inter', 'Segoe UI', 'Roboto', -apple-system, sans-serif;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  background-attachment: fixed;
}

.content {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

.pageContainer {
  flex: 1;
  padding: 2rem;
  max-width: 1400px;
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;
}

/* === HEADER === */
.header {
  display: grid;
  grid-template-columns: 1fr 2fr 1fr;
  align-items: center;
  gap: 2rem;
  margin-bottom: 2rem;
}

.headerLeft,
.headerRight {
  display: flex;
}

.headerRight {
  justify-content: flex-end;
}

.headerCenter {
  display: flex;
  justify-content: center;
}

.titleSection {
  text-align: center;
}

.pageTitle {
  font-size: 2.5rem;
  margin: 0 0 0.5rem 0;
  color: white;
  font-weight: 700;
  letter-spacing: -0.025em;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  text-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
}

.titleIcon {
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.2));
}

.pageSubtitle {
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.9);
  margin: 0;
  font-weight: 400;
  text-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
}

.backButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.875rem 1.5rem;
  background: rgba(255, 255, 255, 0.15);
  color: white;
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: 12px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  backdrop-filter: blur(10px);
  text-decoration: none;
}

.backButton:hover {
  background: rgba(255, 255, 255, 0.25);
  border-color: rgba(255, 255, 255, 0.4);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.createButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 1.5rem;
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 15px rgba(16, 185, 129, 0.4);
  white-space: nowrap;
}

.createButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(16, 185, 129, 0.5);
}

/* === SEARCH === */
.searchSection {
  margin-bottom: 2rem;
}

.searchContainer {
  position: relative;
  max-width: 600px;
  margin: 0 auto;
}

.searchInput {
  width: 100%;
  padding: 1.25rem 1.5rem 1.25rem 3.5rem;
  font-size: 1.1rem;
  border-radius: 16px;
  border: 2px solid rgba(255, 255, 255, 0.2);
  outline: none;
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(10px);
  color: white;
  font-family: inherit;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.searchInput::placeholder {
  color: rgba(255, 255, 255, 0.7);
}

.searchInput:focus {
  border-color: rgba(255, 255, 255, 0.4);
  background: rgba(255, 255, 255, 0.25);
  box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.searchIcon {
  position: absolute;
  left: 1.25rem;
  top: 50%;
  transform: translateY(-50%);
  color: rgba(255, 255, 255, 0.8);
  pointer-events: none;
}

.clearSearch {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.8);
  cursor: pointer;
  padding: 0.5rem;
  border-radius: 8px;
  transition: all 0.2s ease;
}

.clearSearch:hover {
  background: rgba(255, 255, 255, 0.1);
  color: white;
}

/* === STATS === */
.statsSection {
  margin-bottom: 2rem;
}

.statsCard {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
  background: rgba(255, 255, 255, 0.15);
  backdrop-filter: blur(16px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 20px;
  padding: 1.5rem;
  max-width: 500px;
  margin: 0 auto;
}

.statItem {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 0.25rem;
}

.statNumber {
  font-size: 2rem;
  font-weight: 700;
  color: white;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.statLabel {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.8);
  text-align: center;
}

.statDivider {
  width: 1px;
  height: 40px;
  background: rgba(255, 255, 255, 0.2);
}

/* === MAIN CONTENT === */
.rulesContainer {
  background: white;
  border-radius: 24px;
  overflow: hidden;
  box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.rulesHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 2rem 2.5rem;
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
  border-bottom: 1px solid #e5e7eb;
}

.rulesTitle {
  font-size: 1.5rem;
  font-weight: 700;
  color: #1a1a1a;
  margin: 0;
}

.rulesCount {
  font-size: 1rem;
  color: #6b7280;
  font-weight: 500;
}

.rulesGrid {
  display: grid;
  gap: 0;
  padding: 0;
}

/* === RULE CARDS === */
.ruleCard {
  padding: 2rem 2.5rem;
  border-bottom: 1px solid #f1f5f9;
  transition: all 0.3s ease;
  background: white;
}

.ruleCard:hover {
  background: #f8fafc;
  transform: scale(1.002);
}

.ruleCard:last-child {
  border-bottom: none;
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: 1rem;
  gap: 1rem;
}

.cardTitle {
  flex: 1;
  display: flex;
  align-items: center;
  gap: 1rem;
  flex-wrap: wrap;
}

.ruleTitle {
  font-size: 1.25rem;
  font-weight: 700;
  color: #1a1a1a;
  margin: 0;
  line-height: 1.3;
}

.statusBadge {
  display: flex;
  align-items: center;
  gap: 0.375rem;
  padding: 0.5rem 0.875rem;
  border-radius: 12px;
  font-size: 0.85rem;
  font-weight: 600;
  white-space: nowrap;
}

.statusActive {
  background: #d1fae5;
  color: #065f46;
}

.statusInactive {
  background: #f3f4f6;
  color: #6b7280;
}

.cardActions {
  display: flex;
  gap: 0.5rem;
  align-items: flex-start;
}

.actionButton {
  padding: 0.75rem;
  border: none;
  border-radius: 10px;
  cursor: pointer;
  transition: all 0.2s ease;
  background: #f3f4f6;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2.75rem;
  height: 2.75rem;
}

.actionButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.editButton {
  color: #2563eb;
}

.editButton:hover:not(:disabled) {
  background: #dbeafe;
  transform: translateY(-1px);
}

.deleteButton {
  color: #dc2626;
}

.deleteButton:hover:not(:disabled) {
  background: #fee2e2;
  transform: translateY(-1px);
}

.cardBody {
  margin-bottom: 1rem;
}

.ruleDescription {
  color: #4b5563;
  line-height: 1.6;
  margin: 0;
  font-size: 1rem;
}

.cardFooter {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

.ruleDate {
  font-size: 0.9rem;
  color: #9ca3af;
  font-weight: 500;
}

/* === LOADING === */
.loadingState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  color: white;
  text-align: center;
}

.spinner {
  width: 3rem;
  height: 3rem;
  border: 3px solid rgba(255, 255, 255, 0.3);
  border-top: 3px solid white;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1.5rem;
}

.miniSpinner {
  width: 1.125rem;
  height: 1.125rem;
  border: 2px solid rgba(220, 38, 38, 0.3);
  border-top: 2px solid #dc2626;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loadingState h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 0.5rem 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.loadingState p {
  font-size: 1.1rem;
  margin: 0;
  color: rgba(255, 255, 255, 0.8);
}

/* === EMPTY STATE === */
.emptyState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  color: white;
  text-align: center;
}

.emptyIcon {
  margin-bottom: 1.5rem;
  color: rgba(255, 255, 255, 0.6);
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

.emptyState h3 {
  font-size: 1.75rem;
  font-weight: 600;
  margin: 0 0 0.75rem 0;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.emptyState p {
  font-size: 1.1rem;
  margin: 0 0 2rem 0;
  color: rgba(255, 255, 255, 0.8);
  max-width: 500px;
  line-height: 1.5;
}

.emptyButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
  color: white;
  border: none;
  border-radius: 12px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 600;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(59, 130, 246, 0.4);
}

.emptyButton:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(59, 130, 246, 0.5);
}

/* === RESPONSIVIDADE === */

/* Tablets */
@media (max-width: 1024px) {
  .pageContainer {
    padding: 1.5rem;
  }
  
  .header {
    grid-template-columns: 1fr;
    gap: 1.5rem;
    text-align: center;
  }
  
  .headerLeft,
  .headerRight {
    justify-content: center;
  }
  
  .pageTitle {
    font-size: 2rem;
  }
  
  .statsCard {
    gap: 1.5rem;
    padding: 1.25rem;
  }
  
  .rulesHeader {
    padding: 1.5rem 2rem;
    flex-direction: column;
    gap: 1rem;
    text-align: center;
  }
  
  .ruleCard {
    padding: 1.5rem 2rem;
  }
}

/* Mobile */
@media (max-width: 768px) {
  .pageContainer {
    padding: 1rem;
  }
  
  .pageTitle {
    font-size: 1.75rem;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .pageSubtitle {
    font-size: 1rem;
  }
  
  .backButton,
  .createButton {
    padding: 0.875rem 1.25rem;
    font-size: 0.95rem;
  }
  
  .searchInput {
    padding: 1rem 1.25rem 1rem 3rem;
    font-size: 1rem;
  }
  
  .searchIcon {
    left: 1rem;
  }
  
  .statsCard {
    flex-direction: column;
    gap: 1rem;
    padding: 1.5rem;
  }
  
  .statDivider {
    width: 60%;
    height: 1px;
  }
  
  .rulesHeader {
    padding: 1.5rem;
  }
  
  .rulesTitle {
    font-size: 1.25rem;
  }
  
  .ruleCard {
    padding: 1.5rem;
  }
  
  .cardHeader {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }
  
  .cardTitle {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.75rem;
  }
  
  .cardActions {
    align-self: flex-end;
  }
  
  .actionButton {
    width: 2.5rem;
    height: 2.5rem;
  }
}

/* Mobile pequeno */
@media (max-width: 480px) {
  .pageContainer {
    padding: 0.75rem;
  }
  
  .pageTitle {
    font-size: 1.5rem;
  }
  
  .rulesContainer {
    border-radius: 16px;
  }
  
  .ruleCard {
    padding: 1.25rem;
  }
  
  .ruleTitle {
    font-size: 1.125rem;
  }
  
  .ruleDescription {
    font-size: 0.95rem;
  }
  
  .emptyState {
    padding: 3rem 1rem;
  }
  
  .emptyIcon {
    transform: scale(0.8);
  }
  
  .emptyState h3 {
    font-size: 1.5rem;
  }
  
  .emptyState p {
    font-size: 1rem;
  }
}

/* Modo escuro */
@media (prefers-color-scheme: dark) {
  .rulesContainer {
    background: #1f2937;
    border-color: rgba(75, 85, 99, 0.3);
  }
  
  .rulesHeader {
    background: linear-gradient(135deg, #374151 0%, #4b5563 100%);
    border-color: #4b5563;
  }
  
  .rulesTitle,
  .ruleTitle {
    color: #f9fafb;
  }
  
  .rulesCount {
    color: #d1d5db;
  }
  
  .ruleCard {
    background: #1f2937;
    border-color: #374151;
  }
  
  .ruleCard:hover {
    background: #374151;
  }
  
  .ruleDescription {
    color: #e5e7eb;
  }
  
  .ruleDate {
    color: #9ca3af;
  }
  
  .actionButton {
    background: #4b5563;
  }
  
  .editButton:hover:not(:disabled) {
    background: #1e3a8a;
  }
  
  .deleteButton:hover:not(:disabled) {
    background: #7f1d1d;
  }
}

/* Animações aprimoradas */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.rulesContainer {
  animation: fadeInUp 0.6s ease-out;
}

.ruleCard {
  animation: fadeInUp 0.4s ease-out;
}

/* Melhorias de acessibilidade */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus para acessibilidade */
.backButton:focus-visible,
.createButton:focus-visible,
.emptyButton:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.8);
  outline-offset: 2px;
}

.searchInput:focus-visible {
  outline: 2px solid rgba(255, 255, 255, 0.6);
  outline-offset: -2px;
}

.actionButton:focus-visible {
  outline: 2px solid #3b82f6;
  outline-offset: 2px;
}

/* Hover states aprimorados */
.ruleCard::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(59, 130, 246, 0.02), rgba(139, 92, 246, 0.02));
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  border-radius: inherit;
}

.ruleCard {
  position: relative;
}

.ruleCard:hover::before {
  opacity: 1;
}

/* Scrollbar customizada */
.rulesContainer::-webkit-scrollbar {
  width: 6px;
}

.rulesContainer::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 10px;
}

.rulesContainer::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #3b82f6, #8b5cf6);
  border-radius: 10px;
}

.rulesContainer::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #2563eb, #7c3aed);
}

/* Estados de loading mais elaborados */
.loadingState::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 200px;
  height: 200px;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
  border-radius: 50%;
  animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
  0%, 100% {
    opacity: 0.4;
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    opacity: 0.8;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

/* Efeito de brilho nos botões principais */
.createButton::before,
.emptyButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s ease;
}

.createButton:hover::before,
.emptyButton:hover::before {
  left: 100%;
}

.createButton,
.emptyButton {
  position: relative;
  overflow: hidden;
}

/* Melhorias nos badges de status */
.statusBadge {
  position: relative;
  overflow: hidden;
}

.statusActive::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.1));
  animation: shimmer 2s ease-in-out infinite;
}

.statusInactive::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(107, 114, 128, 0.05), rgba(156, 163, 175, 0.05));
}

@keyframes shimmer {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* Efeitos visuais para interações */
.actionButton {
  position: relative;
  overflow: hidden;
}

.actionButton::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 0;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.3);
  transition: all 0.3s ease;
  transform: translate(-50%, -50%);
}

.actionButton:active::after {
  width: 100px;
  height: 100px;
}

/* Gradientes dinâmicos */
@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

.container {
  background: linear-gradient(-45deg, #667eea, #764ba2, #f093fb, #f5576c);
  background-size: 400% 400%;
  animation: gradientShift 15s ease infinite;
}

/* Efeitos de partículas sutis */
.emptyState::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    radial-gradient(circle at 75% 75%, rgba(255, 255, 255, 0.05) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: float 20s ease-in-out infinite;
  pointer-events: none;
}

@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

/* Transições mais suaves para layout changes */
.rulesGrid {
  transition: all 0.3s ease;
}

.ruleCard {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Melhorias na tipografia */
.ruleTitle {
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.ruleDescription {
  text-rendering: optimizeSpeed;
  line-height: 1.7;
}

/* Estados de erro (caso necessário) */
.errorState {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 2rem;
  color: #ef4444;
  text-align: center;
}

.errorState h3 {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
}

.errorState p {
  color: rgba(239, 68, 68, 0.8);
  margin-bottom: 1.5rem;
}

.retryButton {
  padding: 0.75rem 1.5rem;
  background: #ef4444;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.retryButton:hover {
  background: #dc2626;
  transform: translateY(-1px);
}